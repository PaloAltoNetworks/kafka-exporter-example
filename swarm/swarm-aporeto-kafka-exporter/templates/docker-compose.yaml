version: "3.6"

services:
  kafka-exporter:
    labels:
      app: kafka-exporter
      type: aporeto
    image: {{ required "global.imageRegistry is required" .Values.global.imageRegistry }}/kafka-exporter:{{ .Chart.AppVersion }}
    deploy:
      labels:
        app: kafka-exporter
        type: aporeto
      replicas: {{ .Values.replicas }}
      {{- if .Values.placement }}
      placement:
        {{- if .Values.placement.constraints }}
        constraints:
        {{- range .Values.placement.constraints}}
          - {{.}}
        {{- end}}
        {{- end}}
        {{- if .Values.placement.preferences }}
        preferences:
        {{- range .Values.placement.preferences}}
          - {{. | toYaml }}
        {{- end}}
        {{- end}}
      {{- end }}
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    hostname: kafka-exporter_{{`{{.Task.Slot}}`}}
    command: kafka-exporter
    environment:
      EVENTS_EXPORTER_PUBSUB_ADDRESS: "nats://nats:4222"
      EVENTS_EXPORTER_CACERT: /certs/ca-chain-system.pem
      EVENTS_EXPORTER_CLIENT_CERT: /certs/bootstrap-cert.pem
      EVENTS_EXPORTER_CLIENT_CERT_KEY: /certs/bootstrap-key.pem
      EVENTS_EXPORTER_CLIENT_CERT_KEY_PASS: {{ required "global.certs.bootstrap.pass is required" .Values.global.certs.bootstrap.pass }}
      EVENTS_EXPORTER_LOG_LEVEL: {{ .Values.log.level | default .Values.global.log.level | quote }}
      EVENTS_EXPORTER_LOG_FORMAT: {{ .Values.log.format | default .Values.global.log.format | quote }}
      EVENTS_EXPORTER_PUBSUB_USER: {{ required "global.accounts.nats.user is required" .Values.global.accounts.nats.user }}
      EVENTS_EXPORTER_PUBSUB_PASS: {{ required "global.accounts.nats.pass is required" .Values.global.accounts.nats.pass }}
    secrets:
    - source: ca-chain-system.pem
      target: "/certs/ca-chain-system.pem"
    - source: bootstrap-cert.pem
      target: "/certs/bootstrap-cert.pem"
    - source: bootstrap-key.pem
      target: "/certs/bootstrap-key.pem"

    networks:
      {{ .Values.global.networking.backbone.name | default "backbone" }}: {}

networks:
  {{ .Values.global.networking.backbone.name | default "backbone" }}:
    external: true

secrets:
  ca-chain-system.pem:
    external: true
    name: ca-chain-system-{{ required "global.certs.ca.system.chain is required" .Values.global.certs.ca.system.chain | sha256sum | trunc 8 }}
  bootstrap-cert.pem:
    external: true
    name: bootstrap-cert-{{ required "global.certs.bootstrap.cert is required" .Values.global.certs.bootstrap.cert | sha256sum | trunc 8 }}
  bootstrap-key.pem:
    external: true
    name: bootstrap-key-{{ required "global.certs.bootstrap.key is required" .Values.global.certs.bootstrap.key | sha256sum | trunc 8 }}
